{"name":"GrooveCaster","tagline":"The most advanced broadcasting bot for GrooveShark","body":"![Screenshot of the Administration Dashboard](http://i.nofate.me/f5mKBdMZ.png)\r\n\r\n----------\r\n\r\nDescription\r\n--------------\r\nGrooveCaster is a completely standalone, headless, fully automatic and unmanaged broadcasting bot for the music streaming service [GrooveShark](http://grooveshark.com), written in C# and powered by the [SharpShark](https://github.com/OrfeasZ/SharpShark) library.\r\n\r\nGrooveCaster will automagically manage your broadcast by never letting it run out of songs, taking care of all the hassle that's needed for maintaining it manually.\r\n\r\nAdditionally, it provides a variety of management features, either via it's web-based [management interface](#the-admin-dashboard), or in the form of [chat commands](#the-chat-interface) in the broadcast itself, allowing for unattended access by users of your community.\r\n\r\nMoreover, GrooveCaster provides an advanced [module system](#the-module-system), which allows users to very easily introduce completely new functionality (or modify existing one) .\r\n\r\nFinally, GrooveCaster is completely standalone and headless, which means that you can run it on almost any piece of hardware without the need for a graphical output (even on Linux servers using Mono!). Additionally, an ASP.NET package is provided if you want to run it on IIS or Azure.\r\n\r\n> **Note:**  \r\n> While using GrooveCaster you shouldn't be using GrooveShark with the same account that's used for broadcasting, as in doing so you might cause several issues, both for yourself and your listeners.\r\n\r\n> **Note:**  \r\n> GrooveCaster is still at an early stage of development, so some features may still be incomplete or not fully functional. If you come across any issues, don't hesitate to let me know by opening a new issue in the [bugtracker](https://github.com/OrfeasZ/GrooveCaster/issues) for this project.\r\n\r\nInstallation\r\n-------------\r\n\r\nFor ease-of-use, pre-built binary distributions of GrooveCaster will be available for download on each release.\r\nHowever, if you want to build GrooveCaster yourself, you can clone this repository locally and build using Visual Studio 2013.\r\n\r\nLatest Release: **1.3.1.0**\r\n\r\nWindows Binaries: [Download](https://github.com/OrfeasZ/GrooveCaster/releases/download/1.3.1.0/GrooveCaster-1.3.1.0-Win32.zip)  \r\nASP.NET Package: [Download](https://github.com/OrfeasZ/GrooveCaster/releases/download/1.3.1.0/GrooveCaster-1.3.1.0-AspNet.zip)  \r\nMono Binaries: [Download](https://github.com/OrfeasZ/GrooveCaster/releases/download/1.3.1.0/GrooveCaster-1.3.1.0-Mono.zip)\r\n\r\nThere's no installation required.  \r\nSimply download the binaries archive from the links above, and extract them at some location on your drive.\r\n\r\nIf you wish to upgrade GrooveCaster, simply download the latest archive, delete all previous files (except for `gcaster.sqlite` and `gcaster.stats.sqlite`), and extract the fresh archive in the same directory.\r\n\r\n### Windows Environments\r\n\r\n#### Standalone\r\nIf you want to run GrooveCaster on a Windows environment you first need to make sure you have .NET Framework 4.5 installed. If you don't already have it installed, make sure to grab it from [here](http://www.microsoft.com/en-us/download/details.aspx?id=40779).\r\n\r\nAfterwards, running GrooveCaster is as simply as double clicking GrooveCaster.exe and following the instructions on how to perform the [initial setup](#initial-setup).\r\n\r\nIf you get an error about URI reservations, you can try running GrooveCaster as an administrator, and if that doesn't help you will need to follow the on-screen instructions.\r\n\r\nGrooveCaster doesn't currently support being ran as a service, however you could run it in daemon mode by specifying the `-d` parameter:\r\n\r\n> \\> GrooveCaster.exe -d\r\n\r\nAfter GrooveCaster has started you should be able to access it's web interface at [http://localhost:42278](http://localhost:42278).\r\n\r\n#### ASP.NET\r\nGrooveCaster can run under IIS or Windows Azure as an ASP.NET application.\r\nFor ease-of-use, a pre-built package is provided.\r\n\r\nHere's how you can run GrooveCaster under IIS (version >= 7.5 required with ASP.NET 4.5 enabled).\r\n\r\nFirst of all, you need to extract the GrooveCaster ASP.NET package you downloaded at a folder of your preference.\r\n\r\nAfter you've done that, open the IIS Manager, and add a new website with the name `GrooveCaster` (or anything else you like), and point its content directory to the directory you just extracted the ASP.NET package. Make sure to untick the `Start Website immediately` option.\r\n\r\n![Setup IIS website](http://i.nofate.me/N5tK4n3K.png)\r\n\r\nAfter you've done that, you need to configure the application pool for GrooveCaster.\r\n\r\nIn order to do that, click on the `Application Pools` tab present in the left navigation bar, find the `GrooveCaster` application pool, right click it, select `Advanced Settings`, and change the following options:\r\n\r\n - Enable 32-Bit Applications: **True**\r\n - Start Mode: **Always Running**\r\n - Idle Time-out (minutes): **0**\r\n\r\nAfter you've done that, make sure to stop and re-start the application pool.\r\n\r\nFinally, go back to the `Sites` tab, right-click the `GrooveCaster` website, go to `Manage Website` and then `Advanced Settings`, and change the following options:\r\n\r\n - Preload Enabled: **True**\r\n\r\nYou can now start the GrooveCaster website and access it from your web browser.\r\n\r\n### Unix Environments\r\nIn Unix-based environments, GrooveCaster requires a framework called Mono.\r\n\r\nDepending on your platform, you can find instructions on how to install Mono on the project's [website](http://www.mono-project.com/docs/getting-started/install/).  \r\nAfter you've finished installing Mono, the rest is pretty much the same.\r\n\r\nSimply open up your terminal, go to the folder you extracted GrooveCaster in, and launch it using the `-d` parameter (it's required for Linux/OSX environments):\r\n\r\n> $ mono GrooveCaster.exe -d\r\n\r\nIn Unix-based environments you can run GrooveCaster as a service, using the [supervisor](http://supervisord.org/) software.  \r\nThe following instructions underline how to install, configure, and use supervisor in an Ubuntu machine.\r\n\r\nFirst, install supervisor by executing the following command in your terminal:\r\n\r\n> $ sudo apt-get install supervisor\r\n\r\nThen, create a new supervisor configuration file for GrooveCaster:\r\n\r\n> $ sudo touch /etc/supervisor/conf.d/groovecaster.conf\r\n\r\nThen edit the contents of that configuration file with your favorite text editor:\r\n\r\n> [program:groovecaster]  \r\n> command=/usr/bin/mono GrooveCaster.exe -d  \r\n> user=youruser  \r\n> stderr_logfile=/var/log/supervisor/groovecaster.err  \r\n> stdout_logfile=/var/log/supervisor/groovecaster.log  \r\n> directory=/groovecaster/directory/  \r\n\r\nOf course, you will need to replace `youruser` with the username of the user you want to run GrooveCaster under, and `/groovecaster/directory/` with the directory where you extracted GrooveCaster.\r\n\r\nYou should also verify the location of the `mono` executable by running:\r\n\r\n> $ whereis mono\r\n\r\nIf you see `/usr/bin/mono` in there, there's nothing to worry about. Otherwise, simply update the configuration file to reflect the location of the `mono` executable (for instance it could be `/usr/local/bin/mono`).\r\n\r\nAfter you're done with all that start the control manager of supervisor:\r\n\r\n> $ sudo supervisorctl\r\n\r\nUpdate the configuration, and launch GrooveCaster:\r\n\r\n> $ supervisor\\>update  \r\n> $ supervisor\\>start groovecaster\r\n\r\nAfter GrooveCaster has started you should be able to access it's web interface at [http://localhost:42278](http://localhost:42278).\r\n\r\n### Additional Options\r\nWhen launching GrooveCaster you can explicitly specify the host the web interface will bind to.\r\n\r\nBy default, GrooveCaster will bind to http://localhost:42278.\r\n\r\nYou can change that behavior by specifying the `-b` command-line parameter:\r\n\r\n> \\> GrooveCaster.exe -b http://localhost:1234\r\n\r\nInitial Setup\r\n--------------\r\nAfter you've successfully installed GrooveCaster you will have to set it up for use.\r\n\r\nIn order to do that, you first need to login to the admin dashboard by accessing the web interface which, by default, will be available at [http://localhost:42278](http://localhost:42278).\r\n\r\nThe default credentials are `admin` as a username and `admin` as a password.\r\n\r\nAfter you've successfully logged in, you'll be presented with the setup wizard, where you will be required to setup your GrooveShark account, as well as the details of your broadcast.\r\n\r\nOnce you've finished the setup wizard you will be redirected to the admin dashboard, from where you can manage the settings of the bot, your song collection, special guests, and additional users with access to the admin dashboard.\r\n\r\nIt is recommended that the first thing you do is change the password of the admin account.  \r\nTo do that, simply click the `Settings` link, located at the top right corner of the dashboard, and provide your current password (`admin`), and your new desired password.\r\n\r\nNow that your account is secured you will need to add songs to your collection.  \r\nGrooveCaster will not start broadcasting until there's at least 2 songs in your collection.\r\n\r\nFor more instructions on how to add songs to your collection see [Song Management](#song-management).\r\n\r\nYou might also want to add yourself as a special guest via the [Guest Management](#adding-guests) page.\r\n\r\nThe Admin Dashboard\r\n--------------------------\r\n\r\n### Overview\r\nThe overview page provides a quick overview of the current status of GrooveCaster and your broadcast.  \r\n\r\nThis dashboard also provides you with information about the currently playing song, the number of listeners your broadcast had in the past 24 hours, the upcoming songs in your queue, some basic queue management functions, and a chat box which you can use to interact with your listeners.\r\n\r\nGrooveCaster currently only keeps track of the last 20 chat messages.\r\n\r\n> **Note**  \r\n> Most information information doesn't update automatically currently, so you will have to refresh the page to see changes.\r\n\r\n### Queue Management\r\nThe queue management page provides detailed information about the queue of your broadcast.\r\n\r\nFrom this page you can really easily manage your queue, by adding or removing songs, moving them in the queue, or directly skipping to them.\r\n\r\nAdditionally, you are provided with the option to completely empty the queue, by clicking on the `Empty Queue` button.\r\n\r\nMoreover, you can load a playlist into your broadcast by clicking on the `Load Playlist` button, which will make GrooveCaster automatically load songs from that playlist (either in their normal order, or shuffled).\r\n\r\nIf a playlist is already running, you can disable it by clicking on the `Disable` button.\r\n\r\nFor more information about playlist management, refer to [Playlist Management](#playlist-management).\r\n\r\n### Guest Management\r\nThe guest management page provides a detailed listing of users with special guest permissions, while also allowing you to edit/delete them, add new guests, and import guests.\r\n\r\n#### Adding Guests\r\n\r\nTo add a new guest, click on the `Add Guest` button, and fill in the required fields in the page you'll be presented with.\r\n\r\nYou can easily search for a user via the provided search-bar, which will automatically provide suggestions when you start typing a users name. However, if you're not sure you've found the correct user, have them join your broadcast and type `!ping` in chat (while having the ping module enabled). GrooveCaster will respond with a message containing their User ID, which you can then use in this page.\r\n\r\nThe User Name field is only for personal reference, and doesn't have to match the username of the GrooveShark user.\r\n\r\nClicking on the `Channel Permissions` button you will be presented with a choice of toggle-able special guest permissions that are granted to the user.  \r\n\r\nThe default selections will give the user suggestion approval/rejection permissions, and the permission to ban/unban users from the broadcast.\r\n\r\n#### Importing Guests\r\nFor ease of use, GrooveCaster provides the option to import all the users your GrooveShark account follows as special guests.\r\n\r\nIn order to do that, simply click on the `Import Followed Users` button in the Guest Management page.\r\n\r\n### Song Management\r\nThe song management page provides a detailed listing of the local collection of songs GrooveCaster will use to automatically fill the queue.\r\n\r\nFrom this page you can also remove songs from the collection, add new songs, and import songs from a GrooveShark collection.\r\n\r\n#### Adding Songs\r\nAdding songs is really straight forward.\r\n\r\nSimply click on the `Add Song` button present in the Song Management page, and use the search box in order to find the song you'd like to add.\r\n\r\nUpon clicking on a song suggestion from the search box the song details fields will be automatically populated.\r\n\r\nDo **not** edit those fields manually unless you **really** know what you're doing.\r\n\r\nAfter you've found and selected the song you'd like to add, simply click on the `Add` button to add the song to the collection.\r\n\r\n#### Importing Songs\r\nGrooveCaster provides the ability to very easily and automatically import songs from the collection of a GrooveShark user.\r\n\r\nTo do so, simply click on the `Import from GS Collection` button present in the Song Management page, find the user whose collection you want to import using the search box, and click on the `Import` button.\r\n\r\nBy default, the User ID field will contain the ID of the current broadcast user (the user you set up GrooveCaster with).\r\n\r\nNormally, GrooveCaster only imports songs from the users collection. If you also want to import songs from the users favorites (or only from the favorites), you can use the provided checkboxes to specify your preference.\r\n\r\nCollection importing might take some time, so don't worry if you don't see any immediate progress.\r\n\r\n### Playlist Management\r\nThe playlist management page provides a listing of locally available playlists, which can be used for maintaining more control over the queue.\r\n\r\nFrom this page you can also remove existing playlists, or import playlists from a GrooveShark user.\r\n\r\n#### Importing Playlists\r\nGrooveCaster provides the ability to very easily import song playlists from another GrooveShark user.\r\n\r\nTo do so, simply click on the `Import GS Playlists` button present in the Playlist Management page, find the use whose playlists you want to import using the search box, and then choose the ones you need from the options that will be presented to you.\r\n\r\nYou can either import all playlists at once, by clicking on the `Import all Playlists` button (present at the bottom of the playlist list), or individually, by clicking the `Import` button next to each playlist.\r\n\r\nOne thing you should note is that GrooveCaster will automatically add songs that are in imported playlists to your collection (if they don't already exist).\r\n\r\nPlaylist importing might take some time, so don't worry if you don't see any immediate progress.\r\n\r\n### Module Management\r\nThe module management page provides a detailed listing of available modules, while also allowing editing, enabling, disabling, or removing them, as well as creating entirely modules.\r\n\r\nFor more information about modules, refer to the [Module System](#the-module-system).\r\n\r\n### Core Settings\r\nThe core settings page provides the ability to modify some core settings of GrooveCaster.\r\n\r\nCurrently available settings are:\r\n\r\n\r\n| Option                      |  Description | \r\n| ----------------------      |------------- |\r\n| Broadcast Title             | The title of the Broadcast.                                                                                                                               |\r\n| Broadcast Description       | The description of the Broadcast.                                                                                                                         |\r\n| Max History Songs           | The maximum number of songs to keep in history. This prevents GrooveCaster from playing the same songs. Input `0` to disable.                               |\r\n| Song Vote Threshold         | The maximum number of votes a song has to get in order for GrooveCaster to automatically skip it. Only accepts negative values. Input `0` to disable.       |\r\n| Command Prefix \t\t\t  | The prefix used to identify chat commands. Defaults to `!` and can only be a single non-alphanumeric character. |\r\n| Commands without Guest \t  | Allows users to execute chat commands without requiring an active guest status in the broadcast. Defaults to true. |\r\n\r\n### User Management\r\nThe user management page provides a detailed listing of users with access to the GrooveCaster administration dashboard.\r\n\r\nSuch users can only access the [Overview](#overview), [Guest Management](#guest-management), and [Song Management](#song-management) pages.\r\n\r\nThe Chat Interface\r\n----------------------\r\nGrooveCaster provides a really powerful management interface via the default GrooveShark chat.\r\n\r\nUsing a set of commands, listeners with special guest permissions can remotely manage the broadcast, greatly reducing the hustle of personally maintaining it.\r\n\r\nBy default, all users who are added as a Special Guest from the admin dashboard, have guesting permissions in the broadcast itself. However, some commands are only available to users with the required flags.\r\n\r\nAll commands start with the specified command prefix (defaults to `!`).\r\nYou can configure command execution from the [Core Settings](#core-settings) page in order to allow only active guests to use commands.\r\n\r\nCurrently, all commands are implemented in the form of modules you can selectively enable. For more information about available commands refer to [the module system](#the-module-system).\r\n\r\nThe Module System\r\n-----------------------\r\nGrooveCaster also provides a very powerful module system which allows users to implement custom functionality, modify, or built on-top of existing one.\r\n\r\nAll GrooveCaster modules are simple Python scripts (using [IronPython](http://ironpython.net/) syntax), and can be directly managed from the Administration Dashboard.\r\n\r\nAll changes to modules are being propagated immediately, requiring no code recompilation or restarts.\r\n\r\nBy default, GrooveCaster comes with several toggle-able built-in modules which provide custom commands for the chat interface.\r\n\r\nThe default commands are the following:\r\n\r\n| Command         | Description                          |\r\n|-----------------|--------------------------------------|\r\n| `guest`\t\t| `!guest`: Toggle special guest status. |\r\n| `ping`\t\t| `!ping`: Ping the GrooveCaster server. |\r\n| `removeNext`\t\t| `!removeNext [count]`: Removes the next `[count]` songs from the queue (`[count]` defaults to `1` if not specified). |\r\n| `removeLast`\t\t| `!removeLast [count]`: Removes the last `[count]` songs from the queue (`[count]` defaults to `1` if not specified). |\r\n| `fetchByName`\t\t| `!fetchByName <name>`: Fetches a song from the queue with a name matching `<name>` and moves it after the playing song. |\r\n| `fetchLast`\t\t| `!fetchLast`: Fetches the last song in the queue and moves it after the playing song. |\r\n| `removeByName`\t\t| `!removeByName <name>`: Removes all songs whose name matches `<name>` from the queue. |\r\n| `queueRandom` | `!queueRandom [count]`: Adds `[count]` random songs to the end of the queue (`[count]` defaults to 1 if not specified). |\r\n| `skip`\t\t| `!skip`: Skips the current song. |\r\n| `shuffle`\t\t| `!shuffle`: Shuffles the songs in the queue. |\r\n| `peek`\t\t| `!peek`: Displays a list of upcoming songs from the queue. |\r\n| `makeGuest`\t\t| `!makeGuest <userid>`: Makes user with user ID `<userid>` a temporary special guest. |\r\n| `addGuest`\t\t| `!addGuest <userid>`: Makes user with user ID `<userid>` a permanent special guest. |\r\n| `removeGuest`\t\t| `!removeGuest <userid>`: Permanently removes special guest permissions from user with user ID `<userid>`. |\r\n| `unguest`\t\t| `!unguest [userid]`: Temporarily removes special guest permissions from user with user ID `[userid]`. Unguests everyone if `[userid]` is not specified. |\r\n| `addToCollection`\t\t| `!addToCollection`: Adds the currently playing song to the song collection. |\r\n| `removeFromCollection`\t\t| `!removeFromCollection`: Removes the currently playing song from the song collection. |\r\n| `seek` \t\t| `!seek <second>`: Seeks to the `<second>` second of the currently playing song. |\r\n| `setTitle`\t\t| `!setTitle <title>`: Sets the title of the broadcast. |\r\n| `setDescription`\t\t| `!setDescription <description>`: Sets the description of the broadcast. |\r\n| `about`\t\t| `!about`: Displays information about the GrooveCaster bot. |\r\n| `help`\t\t| `!help [command]`: Displays detailed information about the command `[command]`. Displays all available commands if `[command]` is not specified. |\r\n| `find`\t\t| `!find <name>`: Finds songs in the queue whose names match `<name>`. |\r\n| `findPlaylist`\t| `!findPlaylist <name>`: Finds playlists whose name match `<name>` and displays their IDs. |\r\n| `loadPlaylist`\t| `!loadPlaylist <id>`: Loads a playlist with the specified `<id>` into the queue. |\r\n| `disablePlaylist`\t| `!disablePlaylist`: Disables the currently active playlist. |\r\n| `queuePlaylist` | `!queuePlaylist <id>`: Queues the playlist with the specified `<id>` after the currently active playlist. |\r\n| `playlist` | `!playlist`: Displays the name of the currently active playlist (if any). |\r\n\r\nFor more details on how to implement your own modules, sample modules, and documentation on the available APIs, please refer to the [Wiki](https://github.com/OrfeasZ/GrooveCaster/wiki).\r\n\r\nUpcoming Features\r\n-----------------------\r\nThis is a list of features and fixes that are currently being worked on:\r\n\r\n - More statistics!\r\n - Automatic service installation on Windows\r\n\r\nContributing\r\n---------------\r\nGrooveCaster is an open-source project, available for everyone to use and modify.\r\n\r\nIf you want to implement a new feature, modify an ex\r\nisting one, fix a bug, or anything else, feel free to fork this respository and send me a pull request.\r\n\r\nApproved contributions will get added to the master branch, shipped in the next binary release, and contributors will be listed below.\r\n\r\nContributors:\r\n\r\n - [Orfeas Zafeirs](https://github.com/OrfeasZ) (author)\r\n\r\n","google":"UA-60441955-2","note":"Don't delete this file! It's used internally to help with page regeneration."}